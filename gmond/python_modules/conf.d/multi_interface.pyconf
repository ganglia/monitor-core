modules {
  module {
    name     = "multi_interface"
    language = "python"

    # Leaving the interfaces value empty will result in all interfaces being
    # used ie. anything you can see in /proc/net/dev. If you only want to
    # monitor specific ones change value to space delimited list of
    # network interfaces e.g. value = "eth0 eth1 bond0"
    param interfaces {
      value = ""
    }

    # If set to true interfaces that are indicated above will be summed
    # to produce bytes_out, bytes_in, pkts_out and pkts_in values
    # This may be useful in situations where you don't care about internal
    # interfaces ie. if machine is dual homed and really care about
    # traffic going only externally
    param send_aggregate_bytes_packets {
      value = False
    }

    # Alternatively leave the interfaces list at value = "" then exclude
    # specific interfaces by name or regular expression e.g. dummy, lo, eth[0-9]+ etc. 
    param excluded_interfaces {
      value = "lo vnet[0-9]+"
    }
  }
}

collection_group {
  collect_every  = 15
  time_threshold = 45

  metric {
      name_match = "rx_(.+)"
      value_threshold = 1.0
  }
  metric {
      name_match = "tx_(.+)"
      value_threshold = 1.0
  }

#  Uncomment only if param send_aggregate_bytes_packets set to True
#  metric {
#    name = "bytes_out"
#    value_threshold = 4096
#    title = "Bytes Sent"
#  }
#  metric {
#    name = "bytes_in"
#    value_threshold = 4096
#    title = "Bytes Received"
#  }
#  metric {
#    name = "pkts_in"
#    value_threshold = 256
#    title = "Packets Received"
#  }
#  metric {
#    name = "pkts_out"
#    value_threshold = 256
#    title = "Packets Sent"
#  }
}
